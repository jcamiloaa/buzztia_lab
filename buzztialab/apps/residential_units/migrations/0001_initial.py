# Generated by Django 5.0.12 on 2025-03-15 13:39

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ResidentialUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('photo', models.ImageField(blank=True, upload_to='residential_units/photos/', verbose_name='Photo')),
                ('map_url', models.URLField(verbose_name='Google Maps URL')),
                ('property_type', models.CharField(choices=[('casa', 'Casa'), ('apartamento', 'Apartamento')], max_length=20, verbose_name='Property Type')),
                ('status', models.CharField(choices=[('pending', 'Pendiente'), ('approved', 'Aprobado'), ('rejected', 'Rechazado')], default='pending', max_length=20, verbose_name='Status')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Contact Phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='Contact Email')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_residential_units', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_residential_units', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
            ],
            options={
                'verbose_name': 'Residential Unit',
                'verbose_name_plural': 'Residential Units',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('tower_label', models.CharField(blank=True, default='', help_text='Optional tower identifier if applicable', max_length=50, verbose_name='Tower')),
                ('number', models.CharField(max_length=20, verbose_name='House/Apartment Number')),
                ('floor', models.PositiveSmallIntegerField(blank=True, help_text='Optional floor if applicable', null=True, verbose_name='Floor')),
                ('qr_token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='QR Token')),
                ('qr_code', models.ImageField(blank=True, null=True, upload_to='residential_units/qr_codes/', verbose_name='QR Code')),
                ('residential_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='houses', to='residential_units.residentialunit', verbose_name='Residential Unit')),
            ],
            options={
                'verbose_name': 'House/Apartment',
                'verbose_name_plural': 'Houses/Apartments',
                'ordering': ['residential_unit', 'tower_label', 'number'],
                'unique_together': {('residential_unit', 'tower_label', 'number')},
            },
        ),
        migrations.CreateModel(
            name='Resident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('approved', models.BooleanField(default=False, verbose_name='Approved')),
                ('is_owner', models.BooleanField(default=False, verbose_name='Is Owner')),
                ('relationship', models.CharField(blank=True, help_text='Family relationship if not owner', max_length=100, verbose_name='Relationship')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_residents', to=settings.AUTH_USER_MODEL, verbose_name='Approved By')),
                ('house', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='residents', to='residential_units.house', verbose_name='House/Apartment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='residences', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Resident',
                'verbose_name_plural': 'Residents',
                'unique_together': {('house', 'user')},
            },
        ),
    ]
